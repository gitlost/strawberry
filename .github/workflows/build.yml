name: Build
on:
  push:
  pull_request:
    types: [opened, synchronize, reopened]
  release:
    types: [published]

jobs:

  build-macos-public:
    name: Build macOS Public
    if: github.repository != 'strawberrymusicplayer/strawberry-private' && github.ref != 'refs/heads/l10n_master'

    strategy:
      fail-fast: false
      matrix:
        runner: [ 'macos-13' ]
        buildtype: [ 'release' ]

    runs-on: ${{ matrix.runner }}

    steps:

      - name: Set MACOSX_DEPLOYMENT_TARGET
        run: |
          for i in 12 13 14 15; do
            if [ -d "/Library/Developer/CommandLineTools/SDKs/MacOSX${i}.sdk" ]; then
              echo "Using macOS SDK ${i}"
              echo "MACOSX_DEPLOYMENT_TARGET=${i}.0" >> $GITHUB_ENV
              break
            fi
          done

      - name: Verify MACOSX_DEPLOYMENT_TARGET
        run: |
          test "${MACOSX_DEPLOYMENT_TARGET}" = "" && false || echo "MACOSX_DEPLOYMENT_TARGET: ${MACOSX_DEPLOYMENT_TARGET}"

      - name: Set arch
        shell: bash
        run: echo "arch=$(uname -m)" >> $GITHUB_ENV

      - name: Set buildtype
        run: echo "buildtype=$(echo ${{matrix.buildtype}} | tr '[:upper:]' '[:lower:]')" >> $GITHUB_ENV

      - name: Set cmake buildtype
        run: echo "cmake_buildtype=$(echo ${{env.buildtype}} | awk '{print toupper(substr($0,0,1))tolower(substr($0,2))}')" >> $GITHUB_ENV

      - name: Uninstall homebrew
        run: |
          curl -sfLO https://raw.githubusercontent.com/Homebrew/install/master/uninstall.sh
          chmod +x ./uninstall.sh
          sudo ./uninstall.sh --force
          rm -f uninstall.sh

      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          submodules: recursive

      - name: Import certificate file
        if: github.repository == 'strawberrymusicplayer/strawberry' && github.event.pull_request.head.repo.fork == false
        uses: apple-actions/import-codesign-certs@v5
        with:
          p12-file-base64: ${{ secrets.APPLE_DEVELOPER_ID_CERTIFICATE }}
          p12-password: ${{ secrets.APPLE_DEVELOPER_ID_CERTIFICATE_PASSWORD }}

      - name: Download macOS dependencies
        run: curl -f -O -L https://github.com/strawberrymusicplayer/strawberry-macos-dependencies/releases/latest/download/strawberry-macos-${{env.arch}}-${{env.buildtype}}.tar.xz

      - name: Extract macOS dependencies
        run: sudo tar -C / -xf strawberry-macos-${{env.arch}}-${{env.buildtype}}.tar.xz

      - name: Set prefix path
        run: echo "prefix_path=/opt/strawberry_macos_${{env.arch}}_${{env.buildtype}}" >> $GITHUB_ENV

      - name: Update PATH
        run: echo "${{env.prefix_path}}/bin" >> $GITHUB_PATH

      - name: Create Build Environment
        run: cmake -E make_directory build

      - name: Configure CMake
        env:
          PKG_CONFIG_PATH: ${{env.prefix_path}}/lib/pkgconfig
          LDFLAGS: -L${{env.prefix_path}}/lib -Wl,-rpath,${{env.prefix_path}}/lib
        run: >
          cmake
          --log-level="DEBUG"
          -S .
          -B build
          -DCMAKE_BUILD_TYPE="${{env.cmake_buildtype}}"
          -DCMAKE_PREFIX_PATH="${{env.prefix_path}}/lib/cmake"
          -DBUILD_WERROR=ON
          -DUSE_BUNDLE=ON
          -DICU_ROOT="${{env.prefix_path}}"
          -DAPPLE_DEVELOPER_ID=$(test '${{github.repository}}' = 'strawberrymusicplayer/strawberry' && test '${{github.event.pull_request.base.repo.full_name}}' = '${{github.event.pull_request.head.repo.full_name}}' && echo "383J84DVB6" || echo "")
          -DARCH="${{env.arch}}"
          -DENABLE_SPOTIFY=$(test -f "${{env.prefix_path}}/lib/gstreamer-1.0/libgstspotify.dylib" && echo "ON" || echo "OFF")
          -DENABLE_SPARKLE=ON
          -DENABLE_QTSPARKLE=OFF

      - name: Build
        run: cmake --build build --config Release --parallel 4

      - name: Install
        working-directory: build
        run: make install

      - name: Deploy
        env:
          GIO_EXTRA_MODULES: ${{env.prefix_path}}/lib/gio/modules
          GST_PLUGIN_SCANNER: ${{env.prefix_path}}/libexec/gstreamer-1.0/gst-plugin-scanner
          GST_PLUGIN_PATH: ${{env.prefix_path}}/lib/gstreamer-1.0
          LIBSOUP_LIBRARY_PATH: ${{env.prefix_path}}/lib/libsoup-3.0.0.dylib
        working-directory: build
        run: make deploy

      - name: Manually Codesign
        if: github.repository == 'strawberrymusicplayer/strawberry' && github.event.pull_request.head.repo.fork == false && matrix.runner == 'macos-13'
        working-directory: build
        run: codesign -s 383J84DVB6 -f strawberry.app/Contents/Frameworks/{libpcre2-8.0.dylib,libpcre2-16.0.dylib,libpng16.16.dylib,libfreetype.6.dylib,libzstd.1.dylib} strawberry.app/Contents/Frameworks/png.framework/png strawberry.app

      - name: Manually Codesign
        if: github.repository == 'strawberrymusicplayer/strawberry' && github.event.pull_request.head.repo.fork == false && matrix.runner == 'macos-15'
        working-directory: build
        run: codesign -s 383J84DVB6 -f strawberry.app/Contents/Frameworks/png.framework/png strawberry.app

      - name: Deploy check
        working-directory: build
        run: make deploycheck

      - name: Verify code-signing
        if: github.repository == 'strawberrymusicplayer/strawberry' && github.event.pull_request.head.repo.fork == false
        working-directory: build
        run: codesign --deep -v strawberry.app

      - name: Create DMG
        working-directory: build
        run: make dmg

      - name: Upload dmg
        uses: actions/upload-artifact@v4
        with:
          name: macos12
          path: |
            build/*.dmg
